<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.koala.security.authentication.event.repository.LoginLogRepository">

  <sql id="selectLoginLog">
    select t.id,
           t.remote_address,
           t.session_id,
           t.user_id,
           t.username,
           t.password,
           t.is_successful,
           t.exception_message,
           t.log_time
    from k_login_log t
  </sql>

  <sql id="orderBy">
    <choose>
      <when test="orders != null and orders.size() > 0">
        <foreach collection="orders" item="order" index="index" open=" order by " close="" separator=",">
          <include refid="orderByField"/>
        </foreach>
      </when>
      <otherwise>
        order by t.id asc
      </otherwise>
    </choose>
  </sql>

  <sql id="orderByField">
    <if test="order.property == 'logTime'">
      t.log_time
      <include refid="cn.koala.mybatis.repository.CommonRepository.orderDirection"/>
    </if>
  </sql>

  <select id="list" resultType="cn.koala.security.authentication.event.LoginLog">
    <include refid="selectLoginLog"/>
    <where>
      <if test="remoteAddress != null and remoteAddress != ''">
        and t.remote_address = #{remoteAddress}
      </if>
      <if test="sessionId != null and sessionId != ''">
        and t.session_id = #{sessionId}
      </if>
      <if test="userId != null and userId != ''">
        and t.user_id = #{userId}
      </if>
      <if test="username != null and username != ''">
        and t.username = #{username}
      </if>
      <if test="password != null and password != ''">
        and t.password = #{password}
      </if>
      <if test="isSuccessful != null and isSuccessful != ''">
        and t.is_successful = #{isSuccessful}
      </if>
      <if test="logTimeStart != null and logTimeStart != ''">
        and t.log_time &gt;= #{logTimeStart}
      </if>
      <if test="logTimeEnd != null and logTimeEnd != ''">
        and t.log_time &lt;= #{logTimeEnd}
      </if>
    </where>
    <include refid="orderBy"/>
  </select>

  <select id="load" resultType="cn.koala.security.authentication.event.LoginLog">
    <include refid="selectLoginLog"/>
    where t.id = #{id}
  </select>

  <insert id="create" parameterType="cn.koala.security.authentication.event.LoginLog" useGeneratedKeys="true"
          keyProperty="id">
    insert into k_login_log(id, remote_address, session_id, user_id, username, password, is_successful,
                            exception_message,
                            log_time)
    values (#{id}, #{remoteAddress}, #{sessionId}, #{userId}, #{username}, #{password}, #{isSuccessful},
            #{exceptionMessage},
            #{logTime})
  </insert>

  <update id="update" parameterType="cn.koala.security.authentication.event.LoginLog">
    update k_login_log
    <trim prefix="set" suffixOverrides=",">
      <if test="remoteAddress != null">remote_address=#{remoteAddress},</if>
      <if test="sessionId != null">session_id=#{sessionId},</if>
      <if test="userId != null">user_id=#{userId},</if>
      <if test="username != null">username=#{username},</if>
      <if test="password != null">password=#{password},</if>
      <if test="isSuccessful != null">is_successful=#{isSuccessful},</if>
      <if test="exceptionMessage != null">exception_message=#{exceptionMessage},</if>
      <if test="logTime != null">log_time=#{logTime},</if>
    </trim>
    where id=#{id}
  </update>

  <update id="delete" parameterType="cn.koala.security.authentication.event.LoginLog">
    delete
    from k_login_log
    where id = #{id}
  </update>
</mapper>
