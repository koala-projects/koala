<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.koala.template.repository.TemplateRepository">

  <sql id="select">
    select t.id,
           t.group_id,
           t.name,
           t.description,
           t.content,
           t.sort_index,
           t.enabled,
           t.systemic,
           t.deleted,
           t.created_by,
           t.created_date,
           t.last_modified_by,
           t.last_modified_date,
           t.deleted_by,
           t.deleted_date
    from k_template t
  </sql>

  <sql id="where">
    <where>
      <if test="groupId != null and groupId != ''">
        and t.group_id = #{groupId}
      </if>
      <if test="nameLike != null and nameLike != ''">
        and t.name like concat(#{name}, '%')
      </if>
      <if test="deleted != null">
        and t.deleted = #{deleted}
      </if>
    </where>
  </sql>

  <sql id="orders">
    <choose>
      <when test="pageable != null and pageable.getSort() != null and pageable.getSort().isSorted()">
        <foreach collection="pageable.getSort().toList()" item="order" index="index" open=" order by " close=""
                 separator=",">
          <include refid="order"/>
        </foreach>
      </when>
      <otherwise>
        order by t.sort_index asc
      </otherwise>
    </choose>
  </sql>

  <sql id="order">
    <if test="order.property == 'name'">
      t.name
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
    <if test="order.property == 'createdDate'">
      t.created_date
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
    <if test="order.property == 'lastModifiedDate'">
      t.last_modified_date
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
  </sql>

  <select id="list" resultType="cn.koala.template.domain.TemplateEntity">
    <include refid="select"/>
    <include refid="where"/>
    <include refid="orders"/>
  </select>

  <select id="load" resultType="cn.koala.template.domain.TemplateEntity">
    <include refid="select"/>
    where t.id = #{id}
  </select>

  <insert id="create" parameterType="cn.koala.template.domain.TemplateEntity" useGeneratedKeys="true" keyProperty="id">
    insert into k_template(id, group_id, name, description, content, sort_index, enabled, systemic, deleted, created_by,
                           created_date, last_modified_by, last_modified_date, deleted_by, deleted_date)
    values (#{id}, #{groupId}, #{name}, #{description}, #{content}, #{sortIndex}, #{enabled}, #{systemic}, #{deleted},
            #{createdBy}, #{createdDate}, #{lastModifiedBy}, #{lastModifiedDate}, #{deletedBy}, #{deletedDate})
  </insert>

  <update id="update" parameterType="cn.koala.template.domain.TemplateEntity">
    update t_template
    <trim prefix="set" suffixOverrides=",">
      <if test="groupId != null">group_id=#{groupId},</if>
      <if test="name != null">name=#{name},</if>
      <if test="description != null">description=#{description},</if>
      <if test="content != null">content=#{content},</if>
      <if test="sortIndex != null">sort_index=#{sortIndex},</if>
      <if test="enabled != null">enabled=#{enabled},</if>
      <if test="systemic != null">systemic=#{systemic},</if>
      <if test="deleted != null">deleted=#{deleted},</if>
      <if test="createdBy != null">created_by=#{createdBy},</if>
      <if test="createdDate != null">created_date=#{createdDate},</if>
      <if test="lastModifiedBy != null">last_modified_by=#{lastModifiedBy},</if>
      <if test="lastModifiedDate != null">last_modified_date=#{lastModifiedDate},</if>
      <if test="deletedBy != null">deleted_by=#{deletedBy},</if>
      <if test="deletedDate != null">deleted_date=#{deletedDate},</if>
    </trim>
    where id=#{id}
  </update>

  <delete id="delete" parameterType="cn.koala.template.domain.TemplateEntity">
    delete
    from k_template
    where id = #{id}
  </delete>
</mapper>
