<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.koala.system.repository.UserRepository">

  <sql id="select">
    select t.id,
           t.username,
           t.nickname,
           t.avatar,
           t.email,
           t.mobile,
           t.description,
           t.sort_index,
           t.enabled,
           t.systemic,
           t.deleted,
           t.created_by,
           t.created_date,
           t.last_modified_by,
           t.last_modified_date,
           t.deleted_by,
           t.deleted_date
    from k_user t
  </sql>

  <sql id="where">
    <if test="departmentId != null and departmentId != ''">
      left join k_user_department ud on ud.user_id = t.id
    </if>
    <where>
      <if test="username != null and username != ''">
        and t.username = #{username}
      </if>
      <if test="usernameLike != null and usernameLike != ''">
        and t.username like concat(#{usernameLike}, '%')
      </if>
      <if test="nickname != null and nickname != ''">
        and t.nickname = #{nickname}
      </if>
      <if test="nicknameLike != null and nicknameLike != ''">
        and t.nickname like concat(#{nicknameLike}, '%')
      </if>
      <if test="deleted != null">
        and t.deleted = #{deleted}
      </if>
      <if test="departmentId != null and departmentId != ''">
        and ud.department_id = #{departmentId}
      </if>
    </where>
  </sql>

  <sql id="orders">
    <choose>
      <when test="pageable != null and pageable.getSort() != null">
        <foreach collection="pageable.getSort().toList()" item="order" index="index" open=" order by " close=""
                 separator=",">
          <include refid="order"/>
        </foreach>
      </when>
      <otherwise>
        order by t.sort_index asc
      </otherwise>
    </choose>
  </sql>

  <sql id="order">
    <if test="order.property == 'username'">
      t.username
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
    <if test="order.property == 'nickname'">
      t.nickname
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
    <if test="order.property == 'createdDate'">
      t.created_date
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
  </sql>

  <select id="list" resultType="cn.koala.system.domain.UserEntity">
    <include refid="select"/>
    <include refid="where"/>
    <include refid="orders"/>
  </select>

  <select id="load" resultType="cn.koala.system.domain.UserEntity">
    <include refid="select"/>
    where t.id = #{id}
  </select>

  <insert id="create" parameterType="cn.koala.system.domain.UserEntity" useGeneratedKeys="true" keyProperty="id">
    insert into k_user
    values (#{id},
            #{username},
            #{password},
            #{nickname},
            #{avatar},
            #{email},
            #{mobile},
            #{description},
            #{sortIndex},
            #{enabled},
            #{systemic},
            #{deleted},
            #{createdBy},
            #{createdDate},
            #{lastModifiedBy},
            #{lastModifiedDate},
            #{deletedBy},
            #{deletedDate})
  </insert>

  <update id="update" parameterType="cn.koala.system.domain.UserEntity">
    update k_user
    <trim prefix="set" suffixOverrides=",">
      <if test="username != null">username=#{username},</if>
      <if test="nickname != null">nickname=#{nickname},</if>
      <if test="avatar != null">avatar=#{avatar},</if>
      <if test="email != null">email=#{email},</if>
      <if test="mobile != null">mobile=#{mobile},</if>
      <if test="description != null">description=#{description},</if>
      <if test="sortIndex != null">sort_index=#{sortIndex},</if>
      <if test="enabled != null">enabled=#{enabled},</if>
      <if test="systemic != null">systemic=#{systemic},</if>
      <if test="deleted != null">deleted=#{deleted},</if>
      <if test="createdBy != null">created_by=#{createdBy},</if>
      <if test="createdDate != null">created_date=#{createdDate},</if>
      <if test="lastModifiedBy != null">last_modified_by=#{lastModifiedBy},</if>
      <if test="lastModifiedDate != null">last_modified_date=#{lastModifiedDate},</if>
      <if test="deletedBy != null">deleted_by=#{deletedBy},</if>
      <if test="deletedDate != null">deleted_date=#{deletedDate},</if>
    </trim>
    where id=#{id}
  </update>

  <update id="delete" parameterType="cn.koala.system.domain.UserEntity">
    delete
    from k_user
    where id = #{id}
  </update>

  <select id="findAllRoleIdById" resultType="java.lang.Long">
    select role_id
    from k_user_role
    where user_id = #{id}
  </select>

  <insert id="updateRoleIdById">
    delete from k_user_role where user_id = #{id};
    <if test="!roleIds.isEmpty()">
      insert into k_user_role values
      <foreach item="roleId" index="index" collection="roleIds" separator=",">
        (#{id}, #{roleId})
      </foreach>
    </if>
  </insert>

  <select id="findAllDepartmentIdById" resultType="java.lang.Long">
    select department_id
    from k_user_department
    where user_id = #{id}
  </select>

  <insert id="updateDepartmentIdById">
    delete from k_user_department where user_id = #{id};
    <if test="!departmentIds.isEmpty()">
      insert into k_user_department values
      <foreach item="departmentId" index="index" collection="departmentIds" separator=",">
        (#{id}, #{departmentId})
      </foreach>
    </if>
  </insert>

  <select id="findAllDutyIdById" resultType="java.lang.Long">
    select duty_id
    from k_user_duty
    where user_id = #{id}
  </select>

  <insert id="updateDutyIdById">
    delete from k_user_duty where user_id = #{id};
    <if test="!dutyIds.isEmpty()">
      insert into k_user_duty values
      <foreach item="dutyId" index="index" collection="dutyIds" separator=",">
        (#{id}, #{dutyId})
      </foreach>
    </if>
  </insert>
</mapper>
