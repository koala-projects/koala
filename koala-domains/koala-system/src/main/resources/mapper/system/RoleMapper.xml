<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.koala.system.repository.RoleRepository">

  <sql id="select">
    select t.id,
           t.code,
           t.name,
           t.description,
           t.sort_index,
           t.enabled,
           t.systemic,
           t.deleted,
           t.created_by,
           t.created_date,
           t.last_modified_by,
           t.last_modified_date,
           t.deleted_by,
           t.deleted_date
    from k_role t
  </sql>

  <sql id="where">
    <where>
      <if test="code != null and code != ''">
        and t.code = #{code}
      </if>
      <if test="codeLike != null and codeLike != ''">
        and t.code like concat(#{codeLike}, '%')
      </if>
      <if test="name != null and name != ''">
        and t.name = #{name}
      </if>
      <if test="nameLike != null and nameLike != ''">
        and t.name like concat(#{nameLike}, '%')
      </if>
      <if test="enabled != null and enabled != ''">
        and t.enabled = #{enabled}
      </if>
      <if test="deleted != null and deleted != ''">
        and t.deleted = #{deleted}
      </if>
      <if test="createdBy != null and createdBy != ''">
        and t.created_by = #{createdBy}
      </if>
    </where>
  </sql>

  <sql id="orders">
    <choose>
      <when test="pageable != null and pageable.getSort() != null and pageable.getSort().isSorted()">
        <foreach collection="pageable.getSort().toList()" item="order" index="index" open=" order by " close=""
                 separator=",">
          <include refid="order"/>
        </foreach>
      </when>
      <otherwise>
        order by t.sort_index asc
      </otherwise>
    </choose>
  </sql>

  <sql id="order">
    <if test="order.property == 'code'">
      t.code
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
    <if test="order.property == 'name'">
      t.name
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
    <if test="order.property == 'createdDate'">
      t.created_date
      <include refid="cn.koala.mybatis.common.CommonRepository.orderDirection"/>
    </if>
  </sql>

  <select id="list" resultType="cn.koala.system.domain.RoleEntity">
    <include refid="select"/>
    <include refid="where"/>
    <include refid="orders"/>
  </select>

  <select id="load" resultType="cn.koala.system.domain.RoleEntity">
    <include refid="select"/>
    where t.id = #{id}
  </select>

  <insert id="create" parameterType="cn.koala.system.domain.RoleEntity" useGeneratedKeys="true" keyProperty="id">
    insert into k_role
    values (#{id},
            #{code},
            #{name},
            #{description},
            #{sortIndex},
            #{enabled},
            #{systemic},
            #{deleted},
            #{createdBy},
            #{createdDate},
            #{lastModifiedBy},
            #{lastModifiedDate},
            #{deletedBy},
            #{deletedDate})
  </insert>

  <update id="update" parameterType="cn.koala.system.domain.RoleEntity">
    update k_role
    <trim prefix="set" suffixOverrides=",">
      <if test="code != null">code=#{code},</if>
      <if test="name != null">name=#{name},</if>
      <if test="description != null">description=#{description},</if>
      <if test="sortIndex != null">sort_index=#{sortIndex},</if>
      <if test="enabled != null">enabled=#{enabled},</if>
      <if test="systemic != null">systemic=#{systemic},</if>
      <if test="deleted != null">deleted=#{deleted},</if>
      <if test="createdBy != null">created_by=#{createdBy},</if>
      <if test="createdDate != null">created_date=#{createdDate},</if>
      <if test="lastModifiedBy != null">last_modified_by=#{lastModifiedBy},</if>
      <if test="lastModifiedDate != null">last_modified_date=#{lastModifiedDate},</if>
      <if test="deletedBy != null">deleted_by=#{deletedBy},</if>
      <if test="deletedDate != null">deleted_date=#{deletedDate},</if>
    </trim>
    where id=#{id}
  </update>

  <update id="delete" parameterType="cn.koala.system.domain.RoleEntity">
    delete
    from k_role
    where id = #{id}
  </update>

  <select id="findAllCheckedPermissionIdById" resultType="java.lang.Long">
    select permission_id
    from k_role_permission
    where role_id = #{id}
      and is_half_checked = '${@cn.koala.data.domain.YesNo@NO.name()}'
  </select>

  <insert id="authorize">
    delete from k_role_permission where role_id = #{id};
    <if test="!checkedIds.isEmpty()">
      insert into k_role_permission values
      <foreach item="checkedId" index="index" collection="checkedIds" separator=",">
        (#{id}, #{checkedId}, '${@cn.koala.data.domain.YesNo@NO.name()}')
      </foreach>;
    </if>
    <if test="!halfCheckedIds.isEmpty()">
      insert into k_role_permission values
      <foreach item="halfCheckedId" index="index" collection="halfCheckedIds" separator=",">
        (#{id}, #{halfCheckedId}, '${@cn.koala.data.domain.YesNo@YES.name()}')
      </foreach>;
    </if>
  </insert>

  <select id="listUserById" resultType="cn.koala.system.domain.UserEntity">
    select t.id,
           t.username,
           t.nickname,
           t.avatar,
           t.email,
           t.mobile,
           t.description,
           t.sort_index,
           t.enabled
    from k_user t
           join k_user_role ur on t.id = ur.user_id and ur.role_id = #{id}
    where t.deleted = '${@cn.koala.data.domain.YesNo@NO.name()}'
  </select>
</mapper>
