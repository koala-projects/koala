<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.koala.system.repositories.DictionaryRepository">

  <sql id="selectDictionary">
    select t.id,
           t.code,
           t.name,
           t.remark,
           t.is_enable,
           t.is_system,
           t.is_delete,
           t.create_user_id,
           t.create_time,
           t.last_update_user_id,
           t.last_update_time,
           t.delete_user_id,
           t.delete_time
    from system_dictionary t
  </sql>

  <insert id="insert" parameterType="cn.koala.system.entities.DictionaryEntity">
    insert into system_dictionary(id, code, name, remark, create_user_id, create_time)
    values (#{id}, #{code}, #{name}, #{remark}, #{createUserId}, #{createTime})
  </insert>

  <update id="deleteById" parameterType="cn.koala.system.entities.DictionaryEntity">
    update system_dictionary
    set is_delete      = ${@cn.koala.mybatis.YesNo@YES.value},
        delete_user_id = #{deleteUserId},
        delete_time    = #{deleteTime}
    where id = #{id}
  </update>

  <update id="updateById" parameterType="cn.koala.system.entities.DictionaryEntity">
    update system_dictionary
    <trim prefix="set" suffixOverrides=",">
      <if test="code != null">code=#{code},</if>
      <if test="name != null">name=#{name},</if>
      <if test="remark != null">remark=#{remark},</if>
      last_update_user_id = #{lastUpdateUserId},
      last_update_time = #{lastUpdateTime},
    </trim>
    where is_delete = ${@cn.koala.mybatis.YesNo@NO.value} and id=#{id}
  </update>

  <select id="findById" resultType="cn.koala.system.entities.DictionaryEntity">
    <include refid="selectDictionary"/>
    where t.is_delete = ${@cn.koala.mybatis.YesNo@NO.value} and t.id = #{id}
  </select>

  <select id="findAll" resultType="cn.koala.system.entities.DictionaryEntity">
    <include refid="selectDictionary"/>
    <where>
      t.is_delete = ${@cn.koala.mybatis.YesNo@NO.value}
      <if test="parameters.code != null and parameters.code != ''">
        and t.code like concat(#{parameters.code}, '%')
      </if>
      <if test="parameters.name != null and parameters.name != ''">
        and t.name like concat(#{parameters.name}, '%')
      </if>
    </where>
  </select>
</mapper>
