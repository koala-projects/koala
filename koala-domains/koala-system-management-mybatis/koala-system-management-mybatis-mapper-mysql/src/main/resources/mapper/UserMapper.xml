<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="cn.koala.system.mybatis.UserRepository">
  <resultMap id="userDetailsResultMap" type="cn.koala.system.mybatis.UserEntity"
             extends="cn.koala.system.mybatis.CommonRepository.abstractEntityResultMap">
    <id property="id" column="id"/>
    <result property="username" column="username"/>
    <result property="name" column="name"/>
    <result property="password" column="password"/>
    <result property="avatar" column="avatar"/>
    <result property="email" column="email"/>
    <result property="phone" column="phone"/>
    <collection property="roles" ofType="cn.koala.system.mybatis.RoleEntity">
      <id property="id" column="role.id"/>
      <result property="code" column="role.code"/>
      <result property="name" column="role.name"/>
      <collection property="permissions" ofType="cn.koala.system.mybatis.PermissionEntity">
        <id property="id" column="permission.id"/>
        <result property="code" column="permission.code"/>
        <result property="name" column="permission.name"/>
      </collection>
    </collection>
  </resultMap>

  <sql id="selectUser">
    select
    t.id,
    t.username,
    t.password,
    t.name,
    t.avatar,
    t.email,
    t.phone,
    <include refid="cn.koala.system.mybatis.CommonRepository.abstractEntityColumns"/>
    from k_user t
  </sql>
  <sql id="deleteUserRoleByUserId">
    delete
    from k_user_role
    where user_id = #{id};
  </sql>
  <sql id="addUserRole">
    <foreach item="item" index="index" collection="roles" open="" separator="" close="">
      insert into k_user_role (user_id, role_id) values (#{id}, #{item.id});
    </foreach>
  </sql>

  <select id="findAll" resultType="cn.koala.system.mybatis.UserEntity">
    <include refid="selectUser"/>
    <where>
      t.is_delete = 0
      <if test="parameters.name != null and parameters.name != ''">
        and t.name = #{parameters.name}
      </if>
    </where>
  </select>
  <select id="findById" resultMap="userDetailsResultMap">
    select t.id,
    t.username,
    t.password,
    t.name,
    t.avatar,
    t.email,
    t.phone,
    <include refid="cn.koala.system.mybatis.CommonRepository.abstractEntityColumns"/>,
    r.id as "role.id",
    r.code as "role.code",
    r.name as "role.name"
    from k_user t
    left join k_user_role ur on ur.user_id = t.id
    left join k_role r on r.id = ur.role_id
    where t.is_delete = 0 and t.id = #{id,jdbcType=VARCHAR}
  </select>
  <insert id="add" parameterType="cn.koala.system.mybatis.UserEntity">
    insert into k_user (
    id,
    username,
    password,
    name,
    avatar,
    email,
    phone,
    sort_index,
    create_user_id,
    create_user_name,
    create_time
    ) values (
    #{id},
    #{username},
    #{password},
    #{name},
    #{avatar},
    #{email},
    #{phone},
    #{sortIndex},
    #{createUser.id},
    #{createUser.name},
    #{createTime}
    );
    <include refid="addUserRole"/>
  </insert>
  <update id="update" parameterType="cn.koala.system.mybatis.UserEntity">
    update k_user
    set id = #{id},
    username = #{username},
    password = #{password},
    name = #{name},
    avatar = #{avatar},
    email = #{email},
    phone = #{phone},
    sort_index = #{sortIndex},
    last_modify_user_id = #{lastModifyUser.id},
    last_modify_user_name = #{lastModifyUser.name},
    last_modify_time = #{lastModifyTime}
    where id = #{id};
    <include refid="deleteUserRoleByUserId"/>
    <include refid="addUserRole"/>
  </update>
  <update id="delete" parameterType="cn.koala.system.mybatis.UserEntity">
    update k_user
    set is_delete        = ${@cn.koala.enhancement.YesNo@YES.value},
        delete_user_id   = #{deleteUser.id},
        delete_user_name = #{deleteUser.name},
        delete_time      = #{deleteTime}
    where id = #{id}
  </update>

  <select id="findByUsername" resultMap="userDetailsResultMap">
    select t.id,
    t.username,
    t.password,
    t.name,
    t.avatar,
    t.email,
    t.phone,
    <include refid="cn.koala.system.mybatis.CommonRepository.abstractEntityColumns"/>,
    r.id as "role.id",
    r.code as "role.code",
    r.name as "role.name",
    p.id as "permission.id",
    p.code as "permission.code"
    from k_user t
    left join k_user_role ur on ur.user_id = t.id
    left join k_role r on r.id = ur.role_id
    left join k_role_permission rp on r.id = rp.role_id
    left join k_permission p on p.id = rp.permission_id
    where t.is_delete=0 and t.username=#{username,jdbcType=VARCHAR}
  </select>
</mapper>
