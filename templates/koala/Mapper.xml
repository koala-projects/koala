<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="#(package).repository.#(name.pascal.singular)Repository">

  <sql id="select">
    select t.id,
#for(property: properties)
		   t.#(property.name.snake.singular)#if(!for.last),#end
#end
    from #(table.name) t
  </sql>
  
  <sql id="where">
	<where>
#for(property: properties)
      <if test="#(property.name.camel.singular) != null and #(property.name.camel.singular) != ''">
       and t.#(property.name.snake.singular) = #{#(property.name.camel.singular)}
      </if>
#end
    </where>
  </sql>
  
  <sql id="orders">
    <choose>
      <when test="pageable != null and pageable.getSort() != null and pageable.getSort().isSorted()">
        <foreach collection="pageable.getSort().toList()" item="order" index="index" open=" order by " close=""
                 separator=",">
          <include refid="order"/>
        </foreach>
      </when>
      <otherwise>
#if(sortable)
        order by t.sort_index asc
#else if(auditable)
		order by t.created_date desc
#else
		order by t.id
#end
      </otherwise>
    </choose>
  </sql>
  
  <sql id="order">
#for(property: properties)
    <if test="order.property == '#(property.name.camel.singular)'">
        t.#(property.name.snake.singular) 
		<include refid="cn.koala.mybatis.common.CommonRepository.orderDirection" />
    </if>
#end
  </sql>
  
  <select id="list" resultType="#(package).entity.#(name.pascal.singular)Entity">
    <include refid="select"/>
	<include refid="where"/>
	<include refid="orders"/>
  </select>
  
  <select id="load" resultType="#(package).entity.#(name.pascal.singular)Entity">
    <include refid="select"/>
    where t.id = #{id}
  </select>

  <insert id="create" parameterType="#(package).entity.#(name.pascal.singular)Entity"  useGeneratedKeys="true" keyProperty="id">
    insert into #(table.name)
      value (
			 #{id},
#for(property: properties)
			 #{#(property.name.camel.singular)}#if(!for.last),#end
#end
	  )
  </insert>
  
  <update id="update" parameterType="#(package).entity.#(name.pascal.singular)Entity">
    update #(table.name)
    <trim prefix="set" suffixOverrides=",">
#for(property: properties)
      <if test="#(property.name.camel.singular) != null">#(property.name.snake.singular)=#{#(property.name.camel.singular)},</if>
#end
    </trim>
    where id = #{id}
  </update>
  
  <delete id="delete" parameterType="#(package).entity.#(name.pascal.singular)Entity">
	delete
    from #(table.name)
    where id = #{id}
  </delete>
</mapper>
